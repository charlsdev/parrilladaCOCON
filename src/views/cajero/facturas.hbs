      <link rel="stylesheet" href="/bootstrap/css/bootstrap.min.css" type="text/css">
      <link rel="stylesheet" href="/boxicons/boxicons.min.css" type="text/css">
      <link rel="stylesheet" href="/sweetalert2/sweetalert2.min.css" type="text/css">
      <link rel="stylesheet" href="/toastJS/jquery.toast.min.css" type="text/css">

      <link rel="stylesheet" href="/dataTables/dataTable.min.css" type="text/css"/>
      <link rel="stylesheet" href="/dataTables/datatables.min.css" type="text/css"/>
      <link rel="stylesheet" href="/dataTables/theme/dataTables.bootstrap4.min.css" type="text/css"/>

      <link rel="stylesheet" href="/css/navbar.min.css" type="text/css">
      <link rel="stylesheet" href="/css/letra.min.css" type="text/css">
      <link rel="stylesheet" href="/css/products.min.css" type="text/css">
      <link rel="stylesheet" href="/css/modal.min.css" type="text/css">

   </head>

	<body>
      {{> loader}}
      {{> navbarC}}

      <div class="contentView">
         <div class="container">
            <div class="row">
               <div class="col-md-12 text-center">
                  <div class="lettersTittle">
                     <span>F</span>
                     <span>A</span>
                     <span>C</span>
                     <span>T</span>
                     <span>U</span>
                     <span>R</span>
                     <span>A</span>
                     <span>S</span>
                  </div>
               </div>
            </div>

            <div class="row">
               <div class="col-md-12">
                  <table id="listInvoice" class="table is-striped table-striped table-bordered table-sm">
                     <thead class="table-danger">
                        <tr>
                           <th nowrap scope="col">Código</th>
                           <th nowrap scope="col">Cédula</th>
                           <th nowrap scope="col">Cliente</th>
                           <th nowrap scope="col">Fecha</th>
                           <th nowrap scope="col">Vendedor</th>
                           <th nowrap scope="col">Total</th>
                           <th nowrap scope="col">Factura</th>
                        </tr>
                     </thead>
                  </table>
               </div>
            </div>
         </div>
      </div>

      <br>

      {{> drapArea}}

      <script src="/JQuery/jquery.min.js"></script>
      <script src="/js/popper.min.js"></script>
      <script src="/bootstrap/js/bootstrap.min.js"></script>
      <script src="/sweetalert2/sweetalert2.min.js"></script>
      <script src="/imaskJS/imask.min.js"></script>
      <script src="/toastJS/jquery.toast.min.js"></script>

      <script src="/dataTables/jquery.dataTables.min.js"></script>
      <script src="/dataTables/datatables.min.js"></script>
      <script src="/dataTables/theme/dataTables.bootstrap4.min.js"></script>

      <script src="/js/navbar.min.js"></script>

      <script>
         {{> notifications}}

         $(document).ready(function() {
            listInvoice = $('#listInvoice').DataTable({
               destroy: true,
               "ajax": {
                  "url": '/c/allInvoices',
                  "dataSrc":""
               },
               "columns": [
                  {"data": null,
                        render: function ( data, type, row ) {
                           return row._codeMesa;
                        }
                  },
                  {"data": null,
                        render: function ( data, type, row ) {
                           return row.cedula;
                        }
                  },
                  {"data": null,
                        render: function ( data, type, row ) {
                           return row.nomCliente;
                        }
                  },
                  {"data": null,
                        render: function ( data, type, row ) {
                           return row.fecha;
                        }
                  },
                  {"data": null,
                        render: function ( data, type, row ) {
                           return `${row._idVendedor.nombres} ${row._idVendedor.apellidos}`;
                        }
                  },
                  {"data": null,
                        render: function ( data, type, row ) {
                           return parseFloat(row.total).toFixed(2);
                        }
                  },                 
                  {"data": null,
                        render: function ( data, type, row ) {
                           return `<button type="button" class="btnBootstrap btn btn-outline-success" onclick="viewInvoice('${row._codeMesa}')">
                              <i class='bx bxs-file-pdf'></i>
                              Generar
                           </button>`;
                        }
                  },
               ],
               responsive: true,
               language: idioma,
            });
         });

         var idioma = {
            "sProcessing":     "Procesando...",
            "sLengthMenu":     "Mostrar _MENU_ registros",
            "sZeroRecords":    "No se encontraron resultados",
            "sEmptyTable":     "Ningún dato disponible en esta tabla =(",
            "sInfo":           "Mostrando registros del _START_ al _END_ de un total de _TOTAL_ registros",
            "sInfoEmpty":      "Mostrando registros del 0 al 0 de un total de 0 registros",
            "sInfoFiltered":   "(filtrado de un total de _MAX_ registros)",
            "sInfoPostFix":    "",
            "sSearch":         "Buscar:",
            "sUrl":            "",
            "sInfoThousands":  ",",
            "sLoadingRecords": "Cargando...",
            "oPaginate": {
               "sFirst":    "Primero",
               "sLast":     "Último",
               "sNext":     "Siguiente",
               "sPrevious": "Anterior"
            },
            "oAria": {
               "sSortAscending":  ": Activar para ordenar la columna de manera ascendente",
               "sSortDescending": ": Activar para ordenar la columna de manera descendente"
            },
            "buttons": {
               "copy": "Copiar",
               "colvis": "Visibilidad"

            }
         }

         const viewInvoice = (codeMesa) => {
            codeMesa = $.trim(codeMesa);

            if (
               codeMesa === ''
            ) {
               Swal.fire({
                  position: 'top-end',
                  imageUrl: '/img/parilladaCOCON.png',
                  imageWidth: 250,
                  imageHeight: 140,
                  imageAlt: 'Parrilladas COCON',
                  title: 'CAMPOS VACÍOS',
                  html: `<p style="font-size: 1rem;">Los campos no pueden ir vacíos o con espacios.</p>`,
                  showConfirmButton: false,
                  timer: 1500
               })
            } else {
               Swal.fire({
                  title: 'VISUALIZAR FACTURA',
                  html: `<p style="font-size: 1rem;">¿Deseas visualizar la factura <b>N° ${codeMesa}</b>?</p>`,
                  imageUrl: '/img/parilladaCOCON.png',
                  imageWidth: 250,
                  imageHeight: 140,
                  imageAlt: 'Parrilladas COCON',
                  showCancelButton: true,
                  confirmButtonColor: '#049947',
                  cancelButtonColor: '#f34943',
                  confirmButtonText: 'Sí, visualizar!',
                  cancelButtonText: 'No, cancelar!',
                  reverseButtons: true,
                  focusConfirm: false,
                  focusCancel: true,
                  allowOutsideClick: false
               }).then((result) => {
                  if (result.value == true) {
                     bloqueointerface();

                     $.ajax({
                        url: `/c/reGenerateInvoice`,
                        type: 'GET',
                        dataType: 'json',
                        data: {
                           codeMesa
                        }
                     })
                     .done(function(res) {
                        if (res.res == 'true') {
                           desbloqueointerface();
                           
                           Swal.fire({
                              title: res.tittle,
                              html: '<p style="font-size: 1rem;">'+res.description+'</p>',
                              imageUrl: '/img/parilladaCOCON.png',
                              imageWidth: 250,
                              imageHeight: 140,
                              imageAlt: 'Parrilladas COCON',
                              confirmButtonColor: '#049947',
                              allowOutsideClick: false
                           }).then((result) => {
                              if (result.value == true) {
                                 if (res.res == 'true') {
                                    bloqueointerface();
                                    
                                    window.open(`/c/pdf/${res.filename}`,"ventana1","height=750,width=1250,location=no,toolbar=no,menubar=no,scrollbars=no");
                                    
                                    desbloqueointerface();
                                 }
                              }
                           })
                        }

                        if (res.res == 'false') {
                           desbloqueointerface();
                           
                           Swal.fire({
                              title: res.tittle,
                              html: '<p style="font-size: 1rem;">'+res.description+'</p>',
                              icon: res.icon,
                              allowOutsideClick: false
                           }).then((result) => {
                              if (result.value == true) {
                                 if (res.res == 'true') {
                                    location.reload();
                                 }
                              }
                           })
                        }

                        if (res.res == 'error') {
                           desbloqueointerface();
                           
                           Swal.fire({
                              title: res.tittle,
                              html: '<p style="font-size: 1rem;">'+res.description+'</p>',
                              icon: res.icon,
                              allowOutsideClick: false
                           }).then((result) => {
                              if (result.value == true) {
                                 if (res.res == 'true') {
                                    location.reload();
                                 }
                              }
                           })
                        }
                     })
                     .fail(function() {
                        desbloqueointerface();
                        console.log("Error");
                     });
                  }
               })
            }
         }
         
      </script>