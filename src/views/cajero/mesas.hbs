      <link rel="stylesheet" href="/bootstrap/css/bootstrap.min.css" type="text/css">
      <link rel="stylesheet" href="/boxicons/boxicons.min.css" type="text/css">
      <link rel="stylesheet" href="/sweetalert2/sweetalert2.min.css" type="text/css">
      <link rel="stylesheet" href="/toastJS/jquery.toast.min.css" type="text/css">

      <link rel="stylesheet" href="/select2/select2.min.css" type="text/css">
      <link rel="stylesheet" href="/select2/select2-bootstrap.min.css" type="text/css">
      <link rel="stylesheet" href="/dataTables/dataTable.min.css" type="text/css"/>

      <link rel="stylesheet" href="/css/navbar.min.css" type="text/css">
      <link rel="stylesheet" href="/css/letra.min.css" type="text/css">
      <link rel="stylesheet" href="/css/products.min.css" type="text/css">
      <link rel="stylesheet" href="/css/desk.min.css" type="text/css">
      <link rel="stylesheet" href="/css/modal.min.css" type="text/css">

   </head>

	<body>
      {{> loader}}
      {{> navbarC}}

      <div class="contentView">
         <div class="container">
            <div class="row">
               <div class="col-md-12 text-center">
                  <div class="lettersTittle">
                     <span>M</span>
                     <span>E</span>
                     <span>S</span>
                     <span>A</span>
                     <span>S</span>
                  </div>
               </div>
            </div>

            <div class="row mb-4">
               <div class="col-md-12">
                  <button type="button" class="btnGeneral btnRModal" onclick="openModal();">
                     <i class='bx bx-add-to-queue bx-tada' ></i>
                     Separar
                  </button>
               </div>
            </div>

            <div class="row" id="allMesas">
               {{!-- All Mesas --}}
               
            </div>

         </div>
      </div>

      <br>

      <script src="/JQuery/jquery.min.js"></script>
      <script src="/js/popper.min.js"></script>
      <script src="/bootstrap/js/bootstrap.min.js"></script>
      <script src="/sweetalert2/sweetalert2.min.js"></script>
      <script src="/imaskJS/imask.min.js"></script>
      <script src="/toastJS/jquery.toast.min.js"></script>

      <script src="/select2/select2.min.js"></script>

      <script src="/js/navbar.min.js"></script>

      {{!-- Modal Mesa --}}
      <div class="modal fade" id="modalMesa" data-backdrop="static" data-keyboard="false" tabindex="-1" aria-labelledby="staticBackdropLabel" aria-hidden="true">
         <div class="modal-dialog modal-dialog-centered">
            <div class="modal-content">
               <div class="modal-header modalHeader">
                  {{!-- Header del Modal --}}
               </div>

               <div class="modal-body body__modal" style="padding: 0 1rem; !important">
                  <div class="row mt-3 mb-3">
                     <div class="form-group col-md-12">
                        <label for="" class="required"># de Mesa</label>
                        <input type="text" class="form-control" id="numMesa" name="numMesa" placeholder="Ingrese el numero de mesa: Ej. 5" >
                     </div>

                     <div class="form-group col-md-12">
                        <label for="" class="required">Estado</label>
                        <select class="form-control" id="estado" name="estado">
                           <option class="opt" value="" selected disabled>Seleccionar...</option>
                           <option value="Separar">Separar</option>
                           <option value="Reservar">Reservar</option>
                        </select>
                     </div>
                     
                  </div>
                  
               </div>

               <div class="modal-footer modalFooter">
                  {{!-- Footer del Modal --}}
               </div>
               
            </div>
         </div>
      </div>

      <script src="/js/validationsFront.min.js"></script>

      <script>
         {{> notifications}}

         $(document).ready(function() {
            allDesk();
         });

         const allDesk = () => {
            bloqueointerface();
            
            $.ajax({
               url: "/c/allMesas",
               type: "GET",
               datatype: "json",
            })
            .done(function(res) {
               document.getElementById('allMesas').innerHTML = ``;

               if(res.length > 0) {
                  res.forEach(data => {
                     document.getElementById('allMesas').innerHTML += `
                           <div class="col-md-4 mb-3">
                              <section class="card">
                                 <div class="icon">
                                    <img src="/img/desk.png" alt="Shop here.">
                                 </div>

                                 <div class="tittle_card">
                                    Mesa #${data.numMesa} <br>
                                    {{!-- <span class="badgeCard mode badge badge-pill badge-danger">Separada</span>
                                    <span class="badgeCard mode badge badge-pill badge-success">Ocupada</span> --}}

                                    ${data.estado === 'Ocupada' ? '<span class="badgeCard mode badge badge-pill badge-success">Ocupada</span>' : '<span class="badgeCard mode badge badge-pill badge-danger">Separada</span>'}
                                 </div>

                                 <div class="code">
                                    ${data.codigo}
                                 </div>
                                 
                                 <div class="btnS">
                                    <button type="button" class="btnS__all edit" onclick="editMesa('${data._id}', '${data.numMesa}', '${data.estado}');">
                                       <i class='bx bx-edit-alt ' ></i>
                                    </button>
                                    <button type="button" class="btnS__all delete" onclick="deleteMesa('${data._id}', '${data.numMesa}');">
                                       <i class='bx bx-trash ' ></i>
                                    </button>
                                    <button type="button" class="btnS__all list" onclick="openModal('${data._id}');">
                                       <i class='bx bx-file-find ' ></i>
                                    </button>
                                    <button type="button" class="btnS__all pdf" onclick="openModal('${data._id}');">
                                       <i class='bx bxs-file-pdf ' ></i>
                                    </button>
                                 </div>
                              </section>
                           </div>
                        `;
                  });
               } else {
                  document.getElementById('allMesas').innerHTML += `
                        <div class="col-md-5 mx-auto">
                           <div class="alert alert-danger alert-dismissible fade show" role="alert">
                              <strong>Aviso</strong>
                              <p style="text-align: left; font-size: 0.8em; color: #333;">No existen mesas ocupadas o separadas en el momento.</p>
                        </div>
                     `;
               }

               desbloqueointerface();
            })
            .fail(function() {
               console.log("Error");
            });
         }

         const openModal = () => {
            document.querySelector('.modalHeader').innerHTML = `
                  <h5 class="modal-title tittle__modal" id="staticBackdropLabel">
                     Nueva Mesa
                  </h5>`;

            document.querySelector('.modalFooter').innerHTML = `
                  <button type="button" class="btn__Close" data-dismiss="modal">Cerrar</button>
                  <button type="button" class="btn__Send" onclick="saveMesa();">Guardar</button>`;
            
            $('#numMesa').val('');
            $('#estado').val('').trigger('change');

            $("#modalMesa").modal("show");
         }

         const saveMesa = () => {
            numMesa = $.trim($('#numMesa').val());
            estado = $.trim($('#estado').val());
            
            Swal.fire({
               title: 'SEPARAR o AGENDAR MESA',
               html: `<p style="font-size: 1rem;">¿Deseas generar y guardar la <b>Mesa #${numMesa}</b>?</p>`,
               imageUrl: '/img/parilladaCOCON.png',
               imageWidth: 250,
               imageHeight: 140,
               imageAlt: 'Parrilladas COCON',
               showCancelButton: true,
               confirmButtonColor: '#049947',
               cancelButtonColor: '#f34943',
               confirmButtonText: 'Sí, guardar!',
               cancelButtonText: 'No, cancelar!',
               reverseButtons: true,
               focusConfirm: false,
               focusCancel: true,
               allowOutsideClick: false
            }).then((result) => {
               if (result.value == true) {
                  if (
                     numMesa == '' ||
                     estado == ''
                  ) {
                     Swal.fire({
                        position: 'top-end',
                        imageUrl: '/img/parilladaCOCON.png',
                        imageWidth: 250,
                        imageHeight: 140,
                        imageAlt: 'Parrilladas COCON',
                        title: 'CAMPOS VACÍOS',
                        html: `<p style="font-size: 1rem;">Los campos no pueden ir vacíos o con espacios.</p>`,
                        showConfirmButton: false,
                        timer: 1500
                     })
                  } else {
                     bloqueointerface();

                     $.ajax({
                        url: `/c/saveMesa`,
                        type: 'POST',
                        dataType: 'json',
                        data: {
                           numMesa,
                           estado
                        }
                     })
                     .done(function(res) {
                        if (res.res == 'true') {
                           desbloqueointerface();
                           
                           Swal.fire({
                              title: res.tittle,
                              html: '<p style="font-size: 1rem;">'+res.description+'</p>',
                              imageUrl: '/img/parilladaCOCON.png',
                              imageWidth: 250,
                              imageHeight: 140,
                              imageAlt: 'Parrilladas COCON',
                              confirmButtonColor: '#049947',
                              allowOutsideClick: false
                           }).then((result) => {
                              if (result.value == true) {
                                 if (res.res == 'true') {
                                    allDesk();
                                    $("#modalMesa").modal("hide");
                                 }
                              }
                           })
                        }

                        if (res.res == 'false') {
                           desbloqueointerface();
                           
                           Swal.fire({
                              title: res.tittle,
                              html: '<p style="font-size: 1rem;">'+res.description+'</p>',
                              icon: res.icon,
                              allowOutsideClick: false
                           })
                        }

                        if (res.res == 'error') {
                           desbloqueointerface();
                           
                           Swal.fire({
                              title: res.tittle,
                              html: '<p style="font-size: 1rem;">'+res.description+'</p>',
                              icon: res.icon,
                              allowOutsideClick: false
                           }).then((result) => {
                              if (result.value == true) {
                                 if (res.res == 'true') {
                                    location.reload();
                                 }
                              }
                           })
                        }

                        if (res.res == 'toast') {
                           desbloqueointerface();
                           
                           const toastList = res.toast;

                           toastList.forEach(toastDes => {
                              $(document).ready(function() {
                                 $.toast({
                                    position: 'top-right',
                                    heading: `${toastDes.tittle}`,
                                    text: `${toastDes.description}`,
                                    icon: `${toastDes.icon}`,
                                    showHideTransition: 'plain',
                                    hideAfter: 5000
                                 })
                              })
                           });
                        }
                     })
                     .fail(function() {
                        desbloqueointerface();
                        console.log("Error");
                     });
                  }
               }
            })
         } 

         const deleteMesa = (id, numMesa) => {
            idMesa = $.trim(id);
            numMesa = $.trim(numMesa);

            Swal.fire({
               title: `ElIMINAR MESA #${numMesa}`,
               html: `<p style="font-size: 1rem;">¿Deseas eliminar la <b>Mesa #${numMesa}</b>? Recuerda que para eliminar una mesa debe de no tener un proceso de compra en ejecución. Y recuerda que este proceso es irreversible.</p>`,
               imageUrl: '/img/parilladaCOCON.png',
               imageWidth: 250,
               imageHeight: 140,
               imageAlt: 'Parrilladas COCON',
               showCancelButton: true,
               confirmButtonColor: '#049947',
               cancelButtonColor: '#f34943',
               confirmButtonText: 'Sí, eliminar!',
               cancelButtonText: 'No, cancelar!',
               reverseButtons: true,
               focusConfirm: false,
               focusCancel: true,
               allowOutsideClick: false
            }).then((result) => {
               if (result.value === true) {
                  if (
                     idMesa === '' ||
                     numMesa === ''
                  ) {
                     Swal.fire({
                        position: 'top-end',
                        imageUrl: '/img/parilladaCOCON.png',
                        imageWidth: 250,
                        imageHeight: 140,
                        imageAlt: 'Parrilladas COCON',
                        title: 'CAMPOS VACÍOS',
                        html: `<p style="font-size: 1rem;">Los campos no pueden ir vacíos o con espacios.</p>`,
                        showConfirmButton: false,
                        timer: 1500
                     })
                  } else {
                     bloqueointerface();

                     $.ajax({
                        url: `/c/deleteMesa`,
                        type: 'DELETE',
                        dataType: 'json',
                        data: {
                           idMesa,
                           numMesa
                        }
                     })
                     .done(function(res) {
                        if (res.res == 'true') {
                           desbloqueointerface();
                           
                           Swal.fire({
                              title: res.tittle,
                              html: '<p style="font-size: 1rem;">'+res.description+'</p>',
                              imageUrl: '/img/parilladaCOCON.png',
                              imageWidth: 250,
                              imageHeight: 140,
                              imageAlt: 'Parrilladas COCON',
                              confirmButtonColor: '#049947',
                              allowOutsideClick: false
                           }).then((result) => {
                              if (result.value == true) {
                                 if (res.res == 'true') {
                                    allDesk();
                                 }
                              }
                           })
                        }

                        if (res.res == 'false') {
                           desbloqueointerface();
                           
                           Swal.fire({
                              title: res.tittle,
                              html: '<p style="font-size: 1rem;">'+res.description+'</p>',
                              icon: res.icon,
                              allowOutsideClick: false
                           }).then((result) => {
                              if (result.value == true) {
                                 if (res.res == 'true') {
                                    location.reload();
                                 }
                              }
                           })
                        }

                        if (res.res == 'error') {
                           desbloqueointerface();
                           
                           Swal.fire({
                              title: res.tittle,
                              html: '<p style="font-size: 1rem;">'+res.description+'</p>',
                              icon: res.icon,
                              allowOutsideClick: false
                           }).then((result) => {
                              if (result.value == true) {
                                 if (res.res == 'true') {
                                    location.reload();
                                 }
                              }
                           })
                        }

                        if (res.res == 'toast') {
                           desbloqueointerface();
                           
                           const toastList = res.toast;

                           toastList.forEach(toastDes => {
                              $(document).ready(function() {
                                 $.toast({
                                    position: 'top-right',
                                    heading: `${toastDes.tittle}`,
                                    text: `${toastDes.description}`,
                                    icon: `${toastDes.icon}`,
                                    showHideTransition: 'plain',
                                    hideAfter: 5000
                                 })
                              })
                           });
                        }
                     })
                     .fail(function() {
                        desbloqueointerface();
                        console.log("Error");
                     });
                  }
               }
            })
         }

         const editMesa = (id, numMesa, estMesa) => {            
            idMesa = $.trim(id);
            numMesa = $.trim(numMesa);
            estMesa = $.trim(estMesa);

            Swal.fire({
               title: `EDITAR MESA #${numMesa}`,
               html: `<p style="font-size: 1rem;">¿Deseas editar la <b>Mesa #${numMesa}</b>?</p>`,
               imageUrl: '/img/parilladaCOCON.png',
               imageWidth: 250,
               imageHeight: 140,
               imageAlt: 'Parrilladas COCON',
               showCancelButton: true,
               confirmButtonColor: '#049947',
               cancelButtonColor: '#f34943',
               confirmButtonText: 'Sí, editar!',
               cancelButtonText: 'No, cancelar!',
               reverseButtons: true,
               focusConfirm: false,
               focusCancel: true,
               allowOutsideClick: false
            }).then((result) => {
               if (result.value === true) {
                  if (
                     idMesa === '' ||
                     numMesa === '' ||
                     estMesa === ''
                  ) {
                     Swal.fire({
                        position: 'top-end',
                        imageUrl: '/img/parilladaCOCON.png',
                        imageWidth: 250,
                        imageHeight: 140,
                        imageAlt: 'Parrilladas COCON',
                        title: 'CAMPOS VACÍOS',
                        html: `<p style="font-size: 1rem;">Los campos no pueden ir vacíos o con espacios.</p>`,
                        showConfirmButton: false,
                        timer: 1500
                     })
                  } else {
                     bloqueointerface();

                     document.querySelector('.modalHeader').innerHTML = `
                           <h5 class="modal-title tittle__modal" id="staticBackdropLabel">
                              Editar Mesa
                           </h5>`;

                     document.querySelector('.modalFooter').innerHTML = `
                           <button type="button" class="btn__Close" data-dismiss="modal">Cerrar</button>
                           <button type="button" class="btn__Send" onclick="updateMesa('${idMesa}', '${numMesa}', '${estMesa}');">Actualizar</button>`;
                     
                     $('#numMesa').val(`${numMesa}`);
                     $('#estado').val(`${estMesa}`).trigger('change');

                     $("#modalMesa").modal("show");

                     desbloqueointerface();

                  }
               }
            })
         }

         
      </script>