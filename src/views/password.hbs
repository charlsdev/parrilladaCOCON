      <link rel="stylesheet" href="/bootstrap/css/bootstrap.min.css" type="text/css">
      <link rel="stylesheet" href="/boxicons/boxicons.min.css" type="text/css">
      <link rel="stylesheet" href="/sweetalert2/sweetalert2.min.css" type="text/css">
      <link rel="stylesheet" href="/toastJS/jquery.toast.min.css" type="text/css">

      <link rel="stylesheet" href="/css/navbar.min.css" type="text/css">
      <link rel="stylesheet" href="/css/letra.min.css" type="text/css">
      <link rel="stylesheet" href="/css/profile.min.css" type="text/css">
      <link rel="stylesheet" href="/css/drapArea.min.css" type="text/css">
      <link rel="stylesheet" href="/css/password.min.css" type="text/css">
      
      <style>
         .contentView {
            min-height: 100vh;
            margin-bottom: 0 !important;
            top: 0 !important;
            display: flex;
            align-items: center;
         }
      </style>

   </head>

	<body>
      {{> loader}}
      
      {{#isAdmin privilegio}}
         {{> navbarA 
            profile=../profile 
            apellidos=../apellidos 
            nombres=../nombres 
            privilegio=../privilegio
         }}
      {{/isAdmin}}

      {{#isGerente privilegio}}
         {{> navbarC 
            profile=../profile 
            apellidos=../apellidos 
            nombres=../nombres 
            privilegio=../privilegio
         }}
      {{/isGerente}}

      {{#isCajero privilegio}}
         {{> navbarC 
            profile=../profile 
            apellidos=../apellidos 
            nombres=../nombres 
            privilegio=../privilegio
         }}
      {{/isCajero}}

      <div class="contentView">
         <div class="container mt-3 mb-3">
            <div class="designProfile col-md-6 mx-auto my-auto">
               <div class="row">
                  <div class="col-md-12 text-center">
                     <div class="form-title">Cambiar Contraseña</div>
                  </div>

                  <div class="col-md-12 text-center">
                     {{#if profile}}
                        <img class="form-imgP" src="/profile/{{profile}}" alt="Foto de {{apellidos}} {{nombres}}">
                     {{else}}
                        <img class="form-imgP" src="/profile/profile.svg" alt="Imagen Perfil">
                     {{/if}}
                  </div>

                  <div class="col-md-10 form-sms required mb-3 mx-auto">
                     Al cambiar la contraseña, su sesión se cerrará de manera automática para poder validar el cambio. Los espacios en blanco antes y despues de la contraseña no serán válidos. Si presenta algún problema comuniquese con el administrador del sistema.
                  </div>

                  <div class="form-group col-md-12">
                     <label for="" class="required">Actual Contraseña</label>
                     <input type="password" class="form-control actualPass" id="oldPassword" name="oldPassword" placeholder="**********" required>

                     <i class='bx bx-hide showHidePwAct'></i>
                  </div>

                  <div class="form-group col-md-12">
                     <label for="" class="required">Nueva Contraseña</label>
                     <input type="password" class="form-control newPass" id="newPassword" name="newPassword" placeholder="**********" required>

                     <i class='bx bx-hide showHidePwNew'></i>
                  </div>

                  <div class="form-group col-md-12">
                     <label for="" class="required">Confirmar Nueva Contraseña</label>
                     <input type="password" class="form-control confNewPass" id="confNewPassword" name="confNewPassword" placeholder="**********" required>

                     <i class='bx bx-hide showHidePwConf'></i>
                  </div>
               </div>

               <div class="row">
                  <div class="col-md-12 text-right">
                     <button type="button" class="btnGeneral btnUpdateDates" onclick="updatePassword('{{nombres}} {{apellidos}}');">Cambiar Contraseña</button>
                  </div>
               </div>
            </div>
         </div>
      </div>

      {{> drapArea}}

      <script src="/JQuery/jquery.min.js"></script>
      <script src="/js/popper.min.js"></script>
      <script src="/bootstrap/js/bootstrap.min.js"></script>
      <script src="/sweetalert2/sweetalert2.min.js"></script>
      <script src="/imaskJS/imask.min.js"></script>
      <script src="/toastJS/jquery.toast.min.js"></script>
      <script src="/js/validationsFront.min.js"></script>

      <script src="/js/navbar.min.js"></script>
      <script src="/js/drapArea.min.js"></script>
      <script src="/js/password.min.js"></script>

      <script>
         {{> notifications}}
         
         const updatePassword = (nomApe) => {
            oldPassword = $.trim($('#oldPassword').val());
            newPassword = $.trim($('#newPassword').val());
            confNewPassword = $.trim($('#confNewPassword').val());

            Swal.fire({
               title: 'ACTUALIZAR CONTRASEÑA',
               html: `<p style="font-size: 1rem;"><b>${nomApe}</b> ¿Deseas actualizar la contraseña de tu cuenta?</p>`,
               imageUrl: '/img/parilladaCOCON.png',
               imageWidth: 250,
               imageHeight: 140,
               imageAlt: 'Parrillada del COCO',
               showCancelButton: true,
               confirmButtonColor: '#049947',
               cancelButtonColor: '#f34943',
               confirmButtonText: 'Sí, actualizar!',
               cancelButtonText: 'No, cancelar!',
               reverseButtons: true,
               focusConfirm: false,
               focusCancel: true,
               allowOutsideClick: false
            }).then((result) => {
               if (result.value == true) {
                  if (
                     oldPassword == '' || 
                     newPassword == '' || 
                     confNewPassword == ''
                  ) {
                     Swal.fire({
                        position: 'top-end',
                        imageUrl: '/img/parilladaCOCON.png',
                        imageWidth: 250,
                        imageHeight: 140,
                        imageAlt: 'Parrillada del COCO',
                        title: 'CAMPOS VACÍOS',
                        html: `<p style="font-size: 1rem;">Los campos no pueden ir vacíos o con espacios.</p>`,
                        showConfirmButton: false,
                        timer: 1500
                     })
                  } else {
                     bloqueointerface();

                     $.ajax({
                        url: `/password`,
                        type: 'POST',
                        dataType: 'json',
                        data: {
                           oldPassword,
                           newPassword,
                           confNewPassword
                        }
                     })
                     .done(function(res) {
                        if (res.res == 'true') {
                           desbloqueointerface();
                           
                           Swal.fire({
                              title: res.tittle,
                              html: '<p style="font-size: 1rem;">'+res.description+'</p>',
                              imageUrl: '/img/parilladaCOCON.png',
                              imageWidth: 250,
                              imageHeight: 140,
                              imageAlt: 'Parrillada del COCO',
                              confirmButtonColor: '#049947',
                              allowOutsideClick: false
                           }).then((result) => {
                              if (result.value == true) {
                                 if (res.res == 'true') {
                                    location.reload();
                                 }
                              }
                           })
                        }

                        if (res.res == 'false') {
                           desbloqueointerface();
                           
                           Swal.fire({
                              title: res.tittle,
                              html: '<p style="font-size: 1rem;">'+res.description+'</p>',
                              icon: res.icon,
                              allowOutsideClick: false
                           }).then((result) => {
                              if (result.value == true) {
                                 if (res.res == 'true') {
                                    location.reload();
                                 }
                              }
                           })
                        }

                        if (res.res == 'error') {
                           desbloqueointerface();
                           
                           Swal.fire({
                              title: res.tittle,
                              html: '<p style="font-size: 1rem;">'+res.description+'</p>',
                              icon: res.icon,
                              allowOutsideClick: false
                           }).then((result) => {
                              if (result.value == true) {
                                 if (res.res == 'true') {
                                    location.reload();
                                 }
                              }
                           })
                        }

                        if (res.res == 'toast') {
                           desbloqueointerface();
                           
                           const toastList = res.toast;

                           toastList.forEach(toastDes => {
                              $(document).ready(function() {
                                 $.toast({
                                    position: 'top-right',
                                    heading: `${toastDes.tittle}`,
                                    text: `${toastDes.description}`,
                                    icon: `${toastDes.icon}`,
                                    showHideTransition: 'plain',
                                    hideAfter: 5000
                                 })
                              })
                           });
                        }
                     })
                     .fail(function() {
                        desbloqueointerface();
                        console.log("Error");
                     });
                  }
               }
            })
         }
      </script>