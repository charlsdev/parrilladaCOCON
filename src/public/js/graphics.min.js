var ctxV = document.getElementById('myChartV');
var ctxG = document.getElementById('myChartG');

/**
 * Gráfico Gastos
 */
var myChart = new Chart(ctxV, {
   type:'line',
   data:{
      datasets: [{
         backgroundColor: [
            'rgba(255, 99, 132, 0.2)',
            'rgba(255, 159, 64, 0.2)',
            'rgba(255, 205, 86, 0.2)',
            'rgba(75, 192, 192, 0.2)',
            'rgba(54, 162, 235, 0.2)',
            'rgba(153, 102, 255, 0.2)',
            'rgba(201, 203, 207, 0.2)',
            'rgba(54, 162, 235, 0.2)',
            'rgba(75, 192, 192, 0.2)',
            'rgba(255, 205, 86, 0.2)',
            'rgba(255, 159, 64, 0.2)',
            'rgba(255, 99, 132, 0.2)',
         ],
         borderColor: [
            'rgb(255, 99, 132)',
            'rgb(255, 159, 64)',
            'rgb(255, 205, 86)',
            'rgb(75, 192, 192)',
            'rgb(54, 162, 235)',
            'rgb(153, 102, 255)',
            'rgb(201, 203, 207)',
            'rgb(54, 162, 235)',
            'rgb(75, 192, 192)',
            'rgb(255, 205, 86)',
            'rgb(255, 159, 64)',
            'rgb(255, 99, 132)',
         ],
         borderWidth: 1.5,
         fill: true,
         borderDash: [7, 7],
      }]
   },
   options:{
      elements: {
         point: {
            radius: 5,
            pointStyle: 'circle'
         }
      },
      scales:{
         y:{
            beginAtZero:true
         }
      },
      plugins: {
         title: {
            display: true,
            text: 'VENTAS ANUALES',
            font: {
               weight: 'bold',
               size: '35px'
            }
         },
         legend: {
            display: false
         },
         datalabels: {
            anchor: 'end',
            align: 'top',
            formatter: Math.round,
            font: {
               weight: 'bold'
            }
         }
      }
   }
});

const allVentas = (anio) => {
   $.ajax({
      url: '/g/allVentasAnuales',
      type: 'GET',
      datatype: 'json',
      data: {
         anio
      }
   })
      .done(function(res) {
         mostrar(res);
      })
      .fail(function() {
         console.log('Error');
      });
};

const mostrar = (data) =>{
   let ene = 0, feb = 0, mar = 0, abr = 0, may = 0, jun = 0, jul = 0, ago = 0, sep = 0, oct = 0, nov = 0, dic = 0;

   myChart.data['labels'] = ['Enero', 'Febrero', 'Marzo', 'Abril', 'Mayo', 'Junio', 'Julio', 'Agosto', 'Septiembre', 'Octubre', 'Noviembre', 'Diciembre'];

   data.forEach(element => {
      // myChart.data['labels'].push(element.fecha);
      // myChart.data['datasets'][0].data.push(element.total);

      element.fecha.split('/')[1] === '01' ? (ene = ene + (+element.total)) :
         element.fecha.split('/')[1] === '02' ? (feb = feb + (+element.total)) :
            element.fecha.split('/')[1] === '03' ? (mar = mar + (+element.total)) :
               element.fecha.split('/')[1] === '04' ? (abr = abr + (+element.total)) :
                  element.fecha.split('/')[1] === '05' ? (may = may + (+element.total)) :
                     element.fecha.split('/')[1] === '06' ? (jun = jun + (+element.total)) :
                        element.fecha.split('/')[1] === '07' ? (jul = jul + (+element.total)) :
                           element.fecha.split('/')[1] === '08' ? (ago = ago + (+element.total)) :
                              element.fecha.split('/')[1] === '09' ? (sep = sep + (+element.total)) :
                                 element.fecha.split('/')[1] === '10' ? (oct = oct + (+element.total)) :
                                    element.fecha.split('/')[1] === '11' ? (nov = nov + (+element.total)) :
                                       (dic = dic + element.total) ;
   });
   
   myChart.data['datasets'][0].data = [ene, feb, mar, abr, may, jun, jul, ago, sep, oct, nov, dic];

   myChart.update();
};

/**
 * Gráficos Gastos
 */
var myChartG = new Chart(ctxG, {
   type:'line',
   data:{
      datasets: [{
         backgroundColor: [
            'rgba(255, 99, 132, 0.2)',
            'rgba(255, 159, 64, 0.2)',
            'rgba(255, 205, 86, 0.2)',
            'rgba(75, 192, 192, 0.2)',
            'rgba(54, 162, 235, 0.2)',
            'rgba(153, 102, 255, 0.2)',
            'rgba(201, 203, 207, 0.2)',
            'rgba(54, 162, 235, 0.2)',
            'rgba(75, 192, 192, 0.2)',
            'rgba(255, 205, 86, 0.2)',
            'rgba(255, 159, 64, 0.2)',
            'rgba(255, 99, 132, 0.2)',
         ],
         borderColor: [
            'rgb(255, 99, 132)',
            'rgb(255, 159, 64)',
            'rgb(255, 205, 86)',
            'rgb(75, 192, 192)',
            'rgb(54, 162, 235)',
            'rgb(153, 102, 255)',
            'rgb(201, 203, 207)',
            'rgb(54, 162, 235)',
            'rgb(75, 192, 192)',
            'rgb(255, 205, 86)',
            'rgb(255, 159, 64)',
            'rgb(255, 99, 132)',
         ],
         borderWidth: 1.5,
         fill: true,
         borderDash: [7, 7],
      }]
   },
   options:{
      elements: {
         point: {
            radius: 5,
            pointStyle: 'circle'
         }
      },
      scales:{
         y:{
            beginAtZero:true
         }
      },
      plugins: {
         title: {
            display: true,
            text: 'GASTOS ANUALES',
            font: {
               weight: 'bold',
               size: '35px'
            }
         },
         legend: {
            display: false
         },
         datalabels: {
            anchor: 'end',
            align: 'top',
            formatter: Math.round,
            font: {
               weight: 'bold'
            }
         }
      }
   }
});

const allGastos = (anio) => {
   $.ajax({
      url: '/g/allGastosAnuales',
      type: 'GET',
      datatype: 'json',
      data: {
         anio
      }
   })
      .done(function(res) {
         mostrarG(res);
      })
      .fail(function() {
         console.log('Error');
      });
};

const mostrarG = (data) =>{
   let ene = 0, feb = 0, mar = 0, abr = 0, may = 0, jun = 0, jul = 0, ago = 0, sep = 0, oct = 0, nov = 0, dic = 0;

   myChartG.data['labels'] = ['Enero', 'Febrero', 'Marzo', 'Abril', 'Mayo', 'Junio', 'Julio', 'Agosto', 'Septiembre', 'Octubre', 'Noviembre', 'Diciembre'];

   data.forEach(element => {
      element.fechaSave.split('-')[1] === '01' ? (ene = ene + (+element.total)) :
         element.fechaSave.split('-')[1] === '02' ? (feb = feb + (+element.total)) :
            element.fechaSave.split('-')[1] === '03' ? (mar = mar + (+element.total)) :
               element.fechaSave.split('-')[1] === '04' ? (abr = abr + (+element.total)) :
                  element.fechaSave.split('-')[1] === '05' ? (may = may + (+element.total)) :
                     element.fechaSave.split('-')[1] === '06' ? (jun = jun + (+element.total)) :
                        element.fechaSave.split('-')[1] === '07' ? (jul = jul + (+element.total)) :
                           element.fechaSave.split('-')[1] === '08' ? (ago = ago + (+element.total)) :
                              element.fechaSave.split('-')[1] === '09' ? (sep = sep + (+element.total)) :
                                 element.fechaSave.split('-')[1] === '10' ? (oct = oct + (+element.total)) :
                                    element.fechaSave.split('-')[1] === '11' ? (nov = nov + (+element.total)) :
                                       (dic = dic + element.total) ;
   });
   
   myChartG.data['datasets'][0].data = [ene, feb, mar, abr, may, jun, jul, ago, sep, oct, nov, dic];

   myChartG.update();
};